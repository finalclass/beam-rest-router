'use strict';

var _interopRequireWildcard = function (obj) { return obj && obj.__esModule ? obj : { 'default': obj }; };

var _restRouter = require('../../dist/restRouter');

var _restRouter2 = _interopRequireWildcard(_restRouter);

var _bodyParser = require('body-parser');

var _bodyParser2 = _interopRequireWildcard(_bodyParser);

var _express = require('express');

var _express2 = _interopRequireWildcard(_express);

var _supertest = require('supertest');

var _supertest2 = _interopRequireWildcard(_supertest);

var _Entity$Model = require('./tools');

describe('restRouter', function () {
  var req = undefined;
  var data = undefined;

  beforeEach(function () {
    data = [];
    var model = new _Entity$Model.Model(data);

    data.push(new _Entity$Model.Entity({ _id: '1', name: 'Genesis' }, model)), data.push(new _Entity$Model.Entity({ _id: '2', name: 'Exodus' }, model)), data.push(new _Entity$Model.Entity({ _id: '3', name: 'Leviticus' }, model));

    var app = _express2['default']();
    app.use(_bodyParser2['default'].json());
    app.use('/', _restRouter2['default']({ model: model }));
    req = _supertest2['default'](app);
  });

  it('gets one', function (done) {
    req.get('/1').set('Accept', 'application/json').expect('Content-Type', /json/).expect(200).end(function (err, res) {
      if (err) return done(err);
      expect(res.body.name).toBe('Genesis');
      done();
    });
  });

  it('gets all', function (done) {
    req.get('/').set('Accept', 'application/json').expect('Content-Type', /json/).expect(200).end(function (err, res) {
      if (err) return done(err);
      expect(res.body[0].name).toBe('Genesis');
      expect(res.body[1].name).toBe('Exodus');
      expect(res.body[2].name).toBe('Leviticus');
      done();
    });
  });

  it('posts', function (done) {
    var record = { name: 'Numeri' };
    req.post('/').send(record).set('Accept', 'application/json').expect('Content-Type', /json/).expect(201).end(function (err, res) {
      if (err) return done(err);
      expect(res.body).toEqual(record);
      done();
    });
  });

  it('puts', function (done) {
    var name = '1st book of Moses';
    req.put('/1').send({ name: name }).set('Accept', 'application/json').expect('Content-Type', /json/).expect(200).end(function (err, res) {
      if (err) return done(err);
      expect(res.body).toEqual({ _id: '1', name: name });
      done();
    });
  });

  it('deletes', function (done) {
    var name = '1st book of Moses';
    req.del('/1').set('Accept', 'application/json').expect(204).end(function (err, res) {
      if (err) return done(err);
      expect(req.body).toBeUndefined();
      done();
    });
  });
});
//# sourceMappingURL=data:application/json;base64,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QUMsT0FBTyxDQUFDLEVBQUMsR0FBRyxFQUFFLEdBQUcsRUFBRSxJQUFJLEVBQUosSUFBSSxFQUFDLENBQUMsQ0FBQztBQUMzQyxVQUFJLEVBQUUsQ0FBQztLQUNSLENBQUMsQ0FBQztHQUNOLENBQUMsQ0FBQzs7QUFFSCxJQUFFLENBQUMsU0FBUyxFQUFFLFVBQUEsSUFBSSxFQUFJO0FBQ3BCLFFBQUksSUFBSSxHQUFHLG1CQUFtQixDQUFDO0FBQy9CLE9BQUcsQ0FBQyxHQUFHLENBQUMsSUFBSSxDQUFDLENBQ1YsR0FBRyxDQUFDLFFBQVEsRUFBRSxrQkFBa0IsQ0FBQyxDQUNqQyxNQUFNLENBQUMsR0FBRyxDQUFDLENBQ1gsR0FBRyxDQUFDLFVBQUMsR0FBRyxFQUFFLEdBQUcsRUFBSztBQUNqQixVQUFJLEdBQUcsRUFBRSxPQUFPLElBQUksQ0FBQyxHQUFHLENBQUMsQ0FBQztBQUMxQixZQUFNLENBQUMsR0FBRyxDQUFDLElBQUksQ0FBQyxDQUFDLGFBQWEsRUFBRSxDQUFDO0FBQ2pDLFVBQUksRUFBRSxDQUFDO0tBQ1IsQ0FBQyxDQUFDO0dBQ04sQ0FBQyxDQUFDO0NBRUosQ0FBQyxDQUFDIiwiZmlsZSI6InJlc3RSb3V0ZXIuc3BlYy5qcyIsInNvdXJjZVJvb3QiOiIvL2hvbWUvc2VsL0RvY3VtZW50cy9zdHJvamUvcm9ib2wvbm9kZV9tb2R1bGVzL2JlYW0tcmVzdC1yb3V0ZXIvdGVzdC9zcmMifQ==